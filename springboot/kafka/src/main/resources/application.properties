/**
 * Created by fish on 2021/3/15.
 */
server.port=8585
logging.level.root = INFO
spring.datasource.url  = jdbc:h2:mem:testdb


###########\u3010Kafka\u96C6\u7FA4\u3011###########
spring.kafka.bootstrap-servers=127.0.0.1:9092
###########\u3010\u521D\u59CB\u5316\u751F\u4EA7\u8005\u914D\u7F6E\u3011###########
# \u91CD\u8BD5\u6B21\u6570
spring.kafka.producer.retries=0
# \u5E94\u7B54\u7EA7\u522B:\u591A\u5C11\u4E2A\u5206\u533A\u526F\u672C\u5907\u4EFD\u5B8C\u6210\u65F6\u5411\u751F\u4EA7\u8005\u53D1\u9001ack\u786E\u8BA4(\u53EF\u90090\u30011\u3001all/-1)
spring.kafka.producer.acks=1
# \u6279\u91CF\u5927\u5C0F
# spring.kafka.producer.batch-size=16384
# \u63D0\u4EA4\u5EF6\u65F6
# \u5F53\u751F\u4EA7\u7AEF\u79EF\u7D2F\u7684\u6D88\u606F\u8FBE\u5230batch-size\u6216\u63A5\u6536\u5230\u6D88\u606Flinger.ms\u540E,\u751F\u4EA7\u8005\u5C31\u4F1A\u5C06\u6D88\u606F\u63D0\u4EA4\u7ED9kafka
# linger.ms\u4E3A0\u8868\u793A\u6BCF\u63A5\u6536\u5230\u4E00\u6761\u6D88\u606F\u5C31\u63D0\u4EA4\u7ED9kafka,\u8FD9\u65F6\u5019batch-size\u5176\u5B9E\u5C31\u6CA1\u7528\u4E86
spring.kafka.producer.properties.linger.ms=0
# \u751F\u4EA7\u8005\u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4
spring.kafka.producer.properties.request.timeout.ms=5000

# \u751F\u4EA7\u7AEF\u7F13\u51B2\u533A\u5927\u5C0F
# spring.kafka.producer.buffer-memory = 33554432
# Kafka\u63D0\u4F9B\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u7C7B
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# \u81EA\u5B9A\u4E49\u5206\u533A\u5668
# spring.kafka.producer.properties.partitioner.class=com.felix.kafka.producer.CustomizePartitioner

###########\u3010\u521D\u59CB\u5316\u6D88\u8D39\u8005\u914D\u7F6E\u3011###########
# \u9ED8\u8BA4\u7684\u6D88\u8D39\u7EC4ID
spring.kafka.consumer.properties.group.id=defaultConsumerGroup

# \u5F53kafka\u4E2D\u6CA1\u6709\u521D\u59CBoffset\u6216offset\u8D85\u51FA\u8303\u56F4\u65F6\u5C06\u81EA\u52A8\u91CD\u7F6Eoffset
# earliest:\u91CD\u7F6E\u4E3A\u5206\u533A\u4E2D\u6700\u5C0F\u7684offset;
# latest:\u91CD\u7F6E\u4E3A\u5206\u533A\u4E2D\u6700\u65B0\u7684offset(\u6D88\u8D39\u5206\u533A\u4E2D\u65B0\u4EA7\u751F\u7684\u6570\u636E);
# none:\u53EA\u8981\u6709\u4E00\u4E2A\u5206\u533A\u4E0D\u5B58\u5728\u5DF2\u63D0\u4EA4\u7684offset,\u5C31\u629B\u51FA\u5F02\u5E38;
spring.kafka.consumer.auto-offset-reset=latest
# \u6D88\u8D39\u4F1A\u8BDD\u8D85\u65F6\u65F6\u95F4(\u8D85\u8FC7\u8FD9\u4E2A\u65F6\u95F4consumer\u6CA1\u6709\u53D1\u9001\u5FC3\u8DF3,\u5C31\u4F1A\u89E6\u53D1rebalance\u64CD\u4F5C)
# spring.kafka.consumer.properties.session.timeout.ms=120000
# \u6D88\u8D39\u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4
# spring.kafka.consumer.properties.request.timeout.ms=5000
# Kafka\u63D0\u4F9B\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u7C7B
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# \u6D88\u8D39\u7AEF\u76D1\u542C\u7684topic\u4E0D\u5B58\u5728\u65F6\uFF0C\u9879\u76EE\u542F\u52A8\u4F1A\u62A5\u9519(\u5173\u6389)
spring.kafka.listener.missing-topics-fatal=false
# \u8BBE\u7F6E\u6279\u91CF\u6D88\u8D39
# spring.kafka.listener.type=batch
# \u6279\u91CF\u6D88\u8D39\u6BCF\u6B21\u6700\u591A\u6D88\u8D39\u591A\u5C11\u6761\u6D88\u606F
# spring.kafka.consumer.max-poll-records=50

# \u662F\u5426\u81EA\u52A8\u63D0\u4EA4offset\uFF0C\u8BBE\u7F6E\u4E3Atrue\u6307kafka\u7684\u670D\u52A1\u5668\u7684commit\u64CD\u4F5C\uFF0C\u8BBE\u7F6E\u4E3Afalse\u662F\u6307Spring\u7684commit\u64CD\u4F5C
spring.kafka.consumer.enable-auto-commit=false
# \u63D0\u4EA4offset\u5EF6\u65F6(\u63A5\u6536\u5230\u6D88\u606F\u540E\u591A\u4E45\u63D0\u4EA4offset)
 spring.kafka.consumer.auto.commit.interval.ms=100
# \u7981\u7528\u81EA\u52A8\u63D0\u4EA4\uFF0C\u66F4\u591A\u662F\u7528\u4E8E\u5F02\u6B65\u6D88\u8D39\u6D88\u606F\u548C\u91CD\u578B\u6D88\u606F\u7684\u573A\u666F\u7684\u573A\u666F\uFF0C
# 1.\u91CD\u578B\u6D88\u606F\uFF0C\u5C31\u662F\u6D88\u606F\u7684\u5904\u7406\u65F6\u95F4\u5F88\u957F\uFF0C\u8FD9\u4E2A\u65F6\u5019\u4E22\u5931ack\u5BFC\u81F4\u91CD\u65B0\u6D88\u8D39\u6D88\u606F\u7684\u6210\u672C\u592A\u9AD8\u4E86
# 2.\u63A5\u6536\u5230\u6D88\u606F\u4EE5\u540E\uFF0C\u5F02\u6B65\u53BB\u6267\u884C\u4EFB\u52A1\uFF0C\u90A3\u4E48\u53EA\u6709\u5F02\u6B65\u6267\u884C\u4EFB\u52A1\u4EE5\u540E\u624D\u80FD\u624B\u52A8commit\uFF0C\u800C\u4E0D\u662F\u7531\u7CFB\u7EDF\u6765commit
# \u7981\u7528\u81EA\u52A8\u63D0\u4EA4\uFF08\u6309\u5468\u671F\uFF09\u5DF2\u6D88\u8D39offset
# listener\u7C7B\u578B\u4E3A\u5355\u6761\u8BB0\u5F55single\u7C7B\u578B\uFF08\u9ED8\u8BA4\u4E3Asingle\u5355\u6761\u6D88\u8D39\u6A21\u5F0F\uFF09
#spring.kafka.listener.type = single
# offset\u63D0\u4EA4\u6A21\u5F0F\u4E3Arecord
# spring.kafka.listener.ack-mode = record

#https://blog.csdn.net/weixin_70730532/article/details/125425798
#https://blog.csdn.net/luo15242208310/article/details/122285689
#https://cn.quarkus.io/blog/kafka-commit-strategies/
#https://blog.csdn.net/lovedingd/article/details/123076583
#https://stackoverflow.com/questions/50531376/does-kafka-lose-message-if-consumer-holds-message-longer-then-auto-commit-interv
#https://stackoverflow.com/questions/39620911/can-we-lose-kafka-message-in-case-of-poweroff
#https://docs.spring.io/spring-kafka/docs/current/reference/html/#seek
#poll \u65B9\u6CD5\u8FD4\u56DE\u4E86 500 \u6761\u6570\u636E\uFF0C\u9700\u8981 5 \u79D2\u949F\u624D\u80FD\u5904\u7406\u5B8C\uFF0C\u5047\u8BBE\u5728\u7B2C 4 \u79D2\u7684\u65F6\u5019\u5E94\u7528\u6302\u4E86\uFF0Coffset \u662F\u4E0D\u662F\u5728\u7B2C 3 \u79D2\u7684\u65F6\u5019\u5DF2\u7ECF\u88AB\u81EA\u52A8\u63D0\u4EA4\u4E86\uFF0C\u4ECE\u800C\u5BFC\u81F4\u7B2C 4 \u79D2\u4E4B\u540E\u7684\u6570\u636E\u201C\u4E22\u5931\u201D\u4E86\uFF1F